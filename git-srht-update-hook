#!/usr/bin/env python3
from srht.config import cfg, cfgi, load_config
load_config("git")
from srht.database import DbSession
db = DbSession(cfg("sr.ht", "connection-string"))
from gitsrht.types import User, Repository
db.init()
from configparser import ConfigParser
from datetime import datetime
from pygit2 import Repository as GitRepository
import shlex
import subprocess
import sys

op = sys.argv[0]
builds_sr_ht = cfg("network", "builds", default=None)

if op == "hooks/post-update":
    refs = sys.argv[1:]

    config = ConfigParser()
    with open("config") as f:
        config.readfp(f)

    repo_id = config.get("srht", "repo-id")
    if not repo_id:
        sys.exit(0)
    repo_id = int(repo_id)

    repo = Repository.query.filter(Repository.id == repo_id).first()
    if not repo:
        sys.exit(0)

    repo.updated = datetime.utcnow()
    db.session.commit()

    git_repo = GitRepository(repo.path)
    for ref in refs:
        try:
            target = git_repo.lookup_reference(ref).target
            if builds_sr_ht:
                from gitsrht.worker import do_post_update
                do_post_update(repo, git_repo, target)
        except:
            pass
